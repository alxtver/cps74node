<script src="/pcPa.js"></script>
<script type="text/javascript" src="/lib/socketIO/socket.io.js"></script>
<div class="container">
  <div class="input-group mt-2 mb-3">
    <button class="btn btn-outline-dark me-1 mt-1" onclick="location.href='/pcPa/add';">Добавить ПЭВМ</button>
    <button id="excelImport" onclick="location.href='/projects/import';"
      class="btn btn-outline-success me-1 mt-1">Экспорт
      в Excel</button>
    <button id="testPC" onclick="testPC()" class="btn btn-outline-success me-1 mt-1" data-bs-toggle="modal"
      data-bs-target="#modalTest">Проверка</button>
    <div class="input-group-prepend">
      <label class="input-group-text mt-1" for="selectPages">Кол-во ПЭВМ</label>
    </div>
    <select class="form-select mt-1" id="selectPages">
      <option value="1">1</option>
      <option value="5">5</option>
      <option value="10" selected>10</option>
      <option value="20">20</option>
      <option value="all">Все</option>
      <option value="supplement">По приложению</option>
    </select>
  </div>



  <button id="soundOn" onclick="setSoundSessionOff()" class="btn btn-dark soundButton"><i
      class="fa fa-microphone"></i></button>
  <button id="soundOff" onclick="setSoundSessionOn()" hidden="true" class="btn btn-dark soundButtonSlash"><i
      class="fa fa-microphone-slash"></i></button>

  <div class="popup-wrapper">
    <input type="checkbox" class="popup-checkbox" id="popupCheckboxOne">
    <div class="popup">
      <div class="popup-content">
        <label for="popupCheckboxOne" class="popup-closer">&times;</label>
        <p id="oldNumber" class="alert alert-danger mt-1"></p>
        <input id="hiddInp" type="hidden" value="">
      </div>
    </div>
  </div>

  <div id="overlay">
    <div class="spinner " id="spinner">
      <div class="rect1"></div>
      <div class="rect2"></div>
      <div class="rect3"></div>
      <div class="rect4"></div>
      <div class="rect5"></div>
    </div>
  </div>

  <div id="paginationTop"></div>
  <div id="PC"></div>
  <form>
    <input type="hidden" name="_csrf" value="{{csrf}}">
  </form>
  <div id="paginationBottom"></div>
  <input type="hidden" id="hidd_id" value="0">
  <input type="hidden" id="hidd_obj" value="0">
  <input type="hidden" id="hidd_unit" value="0">
  <input type="hidden" id="pagesCount" value="{{ pages }}">
  <input type="hidden" id="page" value="">
  <input type="hidden" id="userName" value="{{ userName }}">

  <!-- Modal -->

  <div class="modal fade" id="modalCopy" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Серийный номер</h5>

          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <form action="/pcPa/copy" method="post">
          <span>Введите серийный номер новой машины или диапазон номеров через ";" (например: XXXX-XXX-0001;
            XXXX-XXX-0005)</span>
          <input type="hidden" name="_csrf" value="{{csrf}}">
          <div class="modal-body">
            <input id="inputCopy" name="serial_number" type="text" value="" class="form-control">
            <div class="mb-2" id="hidd"></div>
          </div>
          <input type="hidden" name="id" id="hidInputCopy">
          <div class="modal-footer">
            <button type="button" class="btn btn-success" data-bs-dismiss="modal">Закрыть</button>
            <button type="submit" id="btnSubmit" class="btn btn-primary" disabled>Сохранить</button>

          </div>
        </form>
      </div>
    </div>
  </div>

  {{!-- модальное окно удаления--}}
  <div class="modal fade" id="modalDel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Удалить ПЭВМ?</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
          </button>
        </div>
        <form>
          <p id="serial"></p>
          <input type="hidden" name="_csrf" value="{{csrf}}">
          <input type="hidden" name="id" id="hidId">

          <div class="modal-footer">
            <button type="button" class="btn btn-success" data-bs-dismiss="modal">Закрыть</button>
            <button type="button" id="btnSub" onclick="delBtn()" data-bs-dismiss="modal"
              class="btn btn-danger">Удалить</button>
          </div>
        </form>
      </div>
    </div>
  </div>


  {{!-- модальное окно теста--}}
  <div class="modal fade" id="modalTest" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="ModalLabel">Пороверка ПЭВМ</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
          </button>
        </div>
        <form>
          <p id="serial"></p>
          <div id="testData">

          </div>
          <input type="hidden" name="_csrf" value="{{csrf}}">
          <div class="modal-footer">
            <button type="button" class="btn btn-success" data-bs-dismiss="modal">Закрыть</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>



<script>
  document.addEventListener("DOMContentLoaded", function () {
    if (!localStorage.sound) {
      document.getElementById("soundOff").hidden = true
      document.getElementById("soundOn").hidden = false
      setSoundSessionOn()
    } else if (localStorage.sound === 'on') {
      document.getElementById("soundOff").hidden = true
      document.getElementById("soundOn").hidden = false
    } else {
      document.getElementById("soundOff").hidden = false
      document.getElementById("soundOn").hidden = true
    }

    // включение текущего элемента в выборе количества ПЭВМ на странице
    let pcCount = `{{pcCount}}`
    document.getElementById('selectPages').value = pcCount
    //пагинация
    const pages = parseInt(document.getElementById('pagesCount').value)
    if (pages > 1) {
      getPage()
    } else {
      loadPage(1)
    }

    // конец пагинации
    const snSelect = document.getElementById('serials')
    snSelect.addEventListener('change', (e) => {
      let snId = snSelect.value
      const el = document.getElementById(snId)
      const offsetPosition = window.pageYOffset + el.getBoundingClientRect().top - 70
      window.scrollTo({
        top: offsetPosition,
        behavior: "smooth"
      })
    })
  })

  document.onkeydown = function (e) {
    e = e || window.event;
    let page = parseInt(document.getElementById('page').value)
    let pages = parseInt(document.getElementById('pagesCount').value)
    if (e.ctrlKey && e.key == 'ArrowRight') {
      if (page < pages) {
        createPagination(parseInt(document.getElementById('page').value) + 1)
      }
    } else if (e.ctrlKey && e.key == 'ArrowLeft') {
      if (page > 1) {
        createPagination(parseInt(document.getElementById('page').value) - 1)
      }
    }
  }

  const selectPage = document.getElementById('selectPages')
  selectPage.addEventListener('change', () => {
    selectPages(selectPage.value)
  })

  const copyInput = document.getElementById('inputCopy')
  copyInput.addEventListener('keyup', (e) => {
    find_serial(e.target.value)
  })
  let uri = 'ws://' + location.hostname + ':3001'
  const socket = io(uri)
  socket.on('updateAssemblyPC', function (data) {
    updateOnePC(data.id, data.user)
  })
</script>